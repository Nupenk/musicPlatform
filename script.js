// –ù–µ –∑–º—ñ–Ω—é–π—Ç–µ –π –Ω–µ –≤–∏–¥–∞–ª—è–π—Ç–µ –∫–ª—ñ—î–Ω—Ç –∞–π–¥—ñ, –≤–æ–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ Api Jamendo
const CLIENT_ID = '2b6cb1ee';
const trackNameEl = document.querySelector('.cover-title');
const coverEl = document.querySelector('.cover img');
const playBtn = document.querySelector('.play');
const seekBar = document.querySelector('.seek-bar');
// –ó–º—ñ–Ω–Ω—ñ —Ö–æ—Ç–±–∞—Ä—É –º—É–∑–∏–∫–∏
const volumeIcon = document.querySelector('.volume-icon');
const volumeSlider = document.querySelector('.volume-slider');
const volumeContainer = document.querySelector('.volume-container');
// –ó–º—ñ–Ω–Ω—ñ –º—É–∑–∏–∫–∏
let audio = null;
let trackUrl = '';
let hideTimeout = null;

let trackIndex = 0;
let genre = 'electronic';
// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è —Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç—Ä–µ–∫—É
function fetchTrack() {
  // –í–∑–∞—î–º–æ–¥—ñ—é—á–∏ –∑ —Å–∏–ª–∫–æ—é –º–æ–∂–Ω–∞ –≤–∏—Å—Ç–∞–≤–ª—è—Ç–∏ —Ä—ñ–∑–Ω—ñ –∂–∞–Ω—Ä–∏ –º—É–∑–∏–∫–∏, –ª—ñ–º—ñ—Ç –ø—ñ—Å–µ–Ω—å 200
  fetch(`https://api.jamendo.com/v3.0/tracks/?client_id=${CLIENT_ID}&format=json&limit=200&tags=${genre}`)
    .then(res => res.json())
    .then(data => {
      console.log('Jamendo response:', data); // –î–æ–¥–∞—î–º–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è
      const track = data.results[trackIndex];
      // –Ø–∫—â–æ –Ω–µ –∑–Ω–∞–π—à–ª–æ –ø—ñ—Å–Ω—é, —Ö–∞–π –∑–Ω–æ–≤ –¥–∏–≤–∏—Ç–∏—Ç—å—Å—è, –∞–ª–µ –∑—ñ –∑–∞—Ç—Ä–∏–º–∫–æ—é —â–æ–± –Ω–µ —ó–ª–æ —Å–∏—Å—Ç–µ–º—É
      if (!track) {
        console.log("–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ —Ç—Ä–µ–∫, —Å–ø—Ä–æ–±–∞ –∑–Ω–æ–≤—É");
        setTimeout( () => {
          fetchTrack();
        },500);
      }
      // –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π –ø—ñ—Å–Ω—ñ
      trackUrl = track.audio;
      trackImage = track.image; // –Ñ —â–µ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å album_image
      trackName = track.name;

      coverEl.src = trackImage;
      trackNameEl.textContent = trackName;

      // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª–∞—Å—É –º—É–∑–∏–∫–∏
      audio = new Audio(trackUrl);
      attachAudioEvents();
      playBtn.textContent = '‚è∏';

      // –Ø–∫—â–æ –ø—ñ—Å–Ω—è –≥—Ä–∞—î –Ω–µ –ø–µ—Ä—à–æ—é, —Ç–æ –≤—ñ–¥—Ä–∞–∑—É —Ö–∞–π –ø–æ—á–∏–Ω–∞—î –≥—Ä–∞—Ç–∏
      if (audio) {
        audio.play();
      }

    })
    .catch(err => console.error('–ü–æ–º–∏–ª–∫–∞:', err));
}
// –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–æ–ª–æ—Å–∫–∏ —á–∞—Å—É –º—É–∑–∏–∫–∏
function updateSeekBar() {
  if (audio && audio.duration) {
    seekBar.max = Math.floor(audio.duration);
    seekBar.value = Math.floor(audio.currentTime);
  }
}
// –ö–æ–ª–∏ –ø—ñ—Å–Ω—è –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è, –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω—É –ø—ñ—Å–Ω—é —Ç–∞ —Ä–µ—Å–µ—Ç–∞—î–º–æ –ø–æ–ª–æ—Å–∫—É —á–∞—Å—É
function attachAudioEvents() {
  if (!audio) return;
  audio.ontimeupdate = updateSeekBar;
  audio.onended = () => {
    playBtn.textContent = '‚ñ∂';
    audio = null;
    seekBar.value = 0;
    trackIndex++;   
    fetchTrack(); 
  };
}
// –ú—ñ—Å—Ü–µ –ø–æ–≤–∑—É–Ω–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ —á–∞—Å—É –ø—ñ—Å–Ω—ñ
seekBar.addEventListener('input', () => {
  if (audio) audio.currentTime = seekBar.value;
});
// –§—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª –∫–Ω–æ–ø–∫–∏ –∑—É–ø–∏–Ω–∏—Ç–∏ –∞–±–æ –≤—ñ–¥—Ç–≤–æ—Ä–∏—Ç–∏
playBtn.addEventListener('click', () => {
  if (audio && !audio.paused) {
    audio.pause();
    playBtn.textContent = '‚ñ∂';
  } else if (audio && audio.paused) {
    audio.play();
    playBtn.textContent = '‚è∏';
  } else if (trackUrl) {
    audio = new Audio(trackUrl);
    audio.volume = volumeSlider.value;
    audio.play();
    playBtn.textContent = '‚è∏';
    attachAudioEvents();
  }
});

fetchTrack();

// –ü–µ—Ä–µ—Ö—ñ–¥ –Ω–∞–∑–∞–¥ –º—ñ–∂ —Ç—Ä–µ–∫–∞–º–∏
document.querySelector('.prev').addEventListener('click', () => {
  if (trackIndex > 0) {
    if (audio && !audio.paused) audio.pause();
    trackIndex--;
    playBtn.textContent = '‚ñ∂';
    audio = null;
    seekBar.value = 0;
    fetchTrack();
  } else {
    alert("–í–∂–µ –ø–µ—Ä—à–∏–π —Ç—Ä–µ–∫, –Ω—ñ–∫—É–¥–∏ –Ω–µ –º–æ–∂–Ω–∞ –Ω–∞–∑–∞–¥");
  }
});
  
// –ü–µ—Ä–µ—Ö—ñ–¥ –≤–ø–µ—Ä–µ–¥ –º—ñ–∂ —Ç—Ä–µ–∫–∞–º–∏
document.querySelector('.next').addEventListener('click', () => {
  if (trackIndex < 199) {
    if (audio && !audio.paused) audio.pause();
    trackIndex++;
    playBtn.textContent = '‚ñ∂';
    audio = null;
    seekBar.value = 0;
    fetchTrack();
  } else {
    alert("–í–∂–µ –æ—Å—Ç–∞–Ω–Ω—ñ–π —Ç—Ä–µ–∫, –Ω—ñ–∫—É–¥–∏ –Ω–µ –º–æ–∂–Ω–∞ –≤–ø–µ—Ä–µ–¥");
  }
});

/* === –ú–µ–Ω—é –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤ === */
document.querySelectorAll('.menu-btn').forEach(btn => {
  btn.addEventListener('click', e => {
    e.stopPropagation();
    const menu = btn.nextElementSibling;
    const isActive = menu.classList.contains('active');
    document.querySelectorAll('.playlist-menu.active').forEach(m => m.classList.remove('active'));
    if (!isActive) menu.classList.add('active');
  });
});

document.addEventListener('click', e => {
  if (!e.target.closest('.playlist')) {
    document.querySelectorAll('.playlist-menu.active').forEach(m => m.classList.remove('active'));
  }
});

/* === –ú–æ–¥–∞–ª–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è === */
const modalOverlay = document.querySelector('.modal-overlay');
const confirmDeleteBtn = document.querySelector('.confirm-delete');
const cancelDeleteBtn = document.querySelector('.cancel-delete');
let playlistToDelete = null;

document.querySelectorAll('.delete-btn').forEach(btn => {
  btn.addEventListener('click', e => {
    e.stopPropagation();
    playlistToDelete = btn.closest('.playlist');
    modalOverlay.classList.add('active');
  });
});

cancelDeleteBtn.addEventListener('click', () => modalOverlay.classList.remove('active'));

confirmDeleteBtn.addEventListener('click', () => {
  if (playlistToDelete) playlistToDelete.remove();
  modalOverlay.classList.remove('active');
});

/* === –ì—Ä–æ–º–∫–æ—Å—Ç—å (—É–ª—É—á—à–µ–Ω–æ) === */
volumeContainer.addEventListener('mouseenter', () => {
  clearTimeout(hideTimeout);
  volumeContainer.classList.add('show');
});

volumeContainer.addEventListener('mouseleave', () => {
  hideTimeout = setTimeout(() => volumeContainer.classList.remove('show'), 800);
});

volumeSlider.addEventListener('input', () => {
  if (audio) audio.volume = volumeSlider.value;
});
/* üåü –õ–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–µ–π–ª–∏—Å—Ç–∞ */
const createBtn = document.querySelector('.create-playlist');
const createOverlay = document.querySelector('.create-playlist-overlay');
const cancelCreateBtn = document.querySelector('.cancel-create');
const confirmCreateBtn = document.querySelector('.confirm-create');
const playlistNameInput = document.querySelector('.playlist-name-input');
const playlistDescInput = document.querySelector('.playlist-desc-input');

createBtn.addEventListener('click', () => {
  createOverlay.classList.add('active');
  playlistNameInput.focus();
});

cancelCreateBtn.addEventListener('click', () => {
  createOverlay.classList.remove('active');
  playlistNameInput.value = '';
  playlistDescInput.value = '';
});

// –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª–∫–∏
createOverlay.addEventListener('click', e => {
  if (e.target === createOverlay) {
    createOverlay.classList.remove('active');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–µ–π–ª–∏—Å—Ç–∞
confirmCreateBtn.addEventListener('click', () => {
  const name = playlistNameInput.value.trim();
  const desc = playlistDescInput.value.trim();

  if (!name) {
    alert('–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –ø–ª–µ–π–ª—ñ—Å—Ç—É');
    return;
  }

  // üëâ –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –º–∞—Å—Å–∏–≤ –∏–ª–∏ localStorage
  console.log('‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ –ø–ª–µ–π–ª—ñ—Å—Ç:', { name, desc });

  // –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ
  createOverlay.classList.remove('active');
  playlistNameInput.value = '';
  playlistDescInput.value = '';
});
/* üß† –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤ */
const sidebarLeft = document.querySelector('.sidebar-left');

function createPlaylistElement(name, desc) {
  // –û–±—ë—Ä—Ç–∫–∞ –ø–ª–µ–π–ª–∏—Å—Ç–∞
  const playlistDiv = document.createElement('div');
  playlistDiv.classList.add('playlist');

  playlistDiv.innerHTML = `
    <img src="placeholder.jpg" alt="cover">
    <div class="info">
      <span>${name}</span>
      <small>${desc || '–∞–≤—Ç–æ—Ä'}</small>
    </div>
    <button class="menu-btn"><i class="fa-solid fa-ellipsis-vertical"></i></button>
    <div class="playlist-menu">
      <button class="delete-btn"><i class="fa-solid fa-trash"></i> –í–∏–¥–∞–ª–∏—Ç–∏</button>
      <button><i class="fa-solid fa-pen"></i> –†–µ–¥–∞–≥—É–≤–∞—Ç–∏</button>
      <button><i class="fa-solid fa-arrows-up-down-left-right"></i> –ü–µ—Ä–µ–º—ñ—Å—Ç–∏—Ç–∏</button>
      <button><i class="fa-solid fa-shuffle"></i> –ü–µ—Ä–µ–º—ñ—à–∞—Ç–∏</button>
    </div>
  `;

  // –í—Å—Ç–∞–≤–ª—è–µ–º –≤ DOM (–ø–æ—Å–ª–µ –∫–Ω–æ–ø–∫–∏ "–°—Ç–≤–æ—Ä–∏—Ç–∏ –ø–ª–µ–π–ª–∏—Å—Ç")
  sidebarLeft.appendChild(playlistDiv);

  // –ù–∞–≤–µ—à–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞ –Ω–æ–≤–æ–µ –º–µ–Ω—é
  const menuBtn = playlistDiv.querySelector('.menu-btn');
  const menu = playlistDiv.querySelector('.playlist-menu');

  menuBtn.addEventListener('click', e => {
    e.stopPropagation();
    const isActive = menu.classList.contains('active');

    document.querySelectorAll('.playlist-menu.active').forEach(m => m.classList.remove('active'));
    if (!isActive) menu.classList.add('active');
  });

  // –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
  const deleteBtn = playlistDiv.querySelector('.delete-btn');
  deleteBtn.addEventListener('click', () => {
    showDeleteModal(playlistDiv);
  });
}

/* üß∞ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è */
function showDeleteModal(playlistElement) {
  const modal = document.createElement('div');
  modal.className = 'modal-overlay active';
  modal.innerHTML = `
    <div class="modal">
      <p>–í–∏ –¥—ñ–π—Å–Ω–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü–µ–π –ø–ª–µ–π–ª—ñ—Å—Ç?</p>
      <div class="modal-actions">
        <button class="confirm-delete">–í–∏–¥–∞–ª–∏—Ç–∏</button>
        <button class="cancel-delete">–°–∫–∞—Å—É–≤–∞—Ç–∏</button>
      </div>
    </div>
  `;

  document.body.appendChild(modal);

  modal.querySelector('.cancel-delete').addEventListener('click', () => {
    modal.remove();
  });

  modal.addEventListener('click', e => {
    if (e.target === modal) modal.remove();
  });

  modal.querySelector('.confirm-delete').addEventListener('click', () => {
    playlistElement.remove();
    modal.remove();
  });
}

/* üìù –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–≥–∏–∫—É —Å–æ–∑–¥–∞–Ω–∏—è */
confirmCreateBtn.addEventListener('click', () => {
  const name = playlistNameInput.value.trim();
  const desc = playlistDescInput.value.trim();

  if (!name) {
    alert('–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –ø–ª–µ–π–ª—ñ—Å—Ç—É');
    return;
  }

  createPlaylistElement(name, desc);

  createOverlay.classList.remove('active');
  playlistNameInput.value = '';
  playlistDescInput.value = '';
});

